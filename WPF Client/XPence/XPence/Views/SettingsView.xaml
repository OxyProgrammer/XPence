<!--PROJECT : XPence
PROJECT DESCRIPTION : A metro style, smart client expense tracking software.
AUTHOR : Siddhartha S
DISCLAIMER : This code is licensed under CPOL. You are free to use this in your project.
The author takes no liabilities for any damage caused because of this code. Use at your own risk.-->
<UserControl x:Class="XPence.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:apex="clr-namespace:Apex.Controls;assembly=Apex"
             xmlns:Shared="clr-namespace:XPence.Shared;assembly=XPence.Shared"
             xmlns:attached="clr-namespace:XPence.AttachedMembers" 
             xmlns:cnv="clr-namespace:XPence.Converters"
             xmlns:Utility="clr-namespace:XPence.Infrastructure.Utility;assembly=XPence.Infrastructure"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--CONVERTERS-->
            <cnv:StringToColorConverter x:Key="stringToColorConv"/>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="5"/>
            </Style>

            <Style TargetType="ComboBoxItem" x:Key="AccentColorComboItemStyle">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <Ellipse Height="14" Width="14" Fill="{Binding Converter={StaticResource stringToColorConv},ConverterParameter={x:Static Utility:AppConstants.CONVERT_ACCENT}}" Margin="2"/>
                                <TextBlock Text="{Binding}" FontSize="14" Margin="2"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBoxItem" x:Key="ThemeColorComboItemStyle">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <Ellipse Height="14" Width="14" Stroke="{DynamicResource BlackBrush}"
                                             Fill="{Binding Converter={StaticResource stringToColorConv},ConverterParameter={x:Static Utility:AppConstants.CONVERT_BASE}}" Margin="2"/>
                                <TextBlock Text="{Binding}" FontSize="14" Margin="2"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--The error template for the content presenter below the text boxes or combo box.-->
            <DataTemplate DataType="{x:Type ValidationError}">
                <TextBlock FontSize="{StaticResource ContentFontSize}"
                                   FontFamily="{StaticResource ContentFontFamily}"
                                   Foreground="{StaticResource ControlsValidationBrush}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   TextAlignment="Right"
                                   Margin="0,0,0,2"
                                   Text="{Binding Path=ErrorContent}"/>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    <apex:ApexGrid Rows="Auto,Auto,Auto,Auto,15,Auto,Auto,Auto,Auto"
                   Columns="Auto,Auto" Background="Transparent">

        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" FontSize="18" Text="{x:Static Shared:UIText.CHANGE_PASSWORD_SECTION_TEXT}"/>

        <TextBlock Grid.Row="1" Grid.Column="0" Margin="20,5,5,5" Text="{x:Static Shared:UIText.OLD_PASSWORD_LABEL_TEXT}"/>
        <PasswordBox Grid.Row="1" Grid.Column="1" Width="200" Margin="2" attached:PasswordHelper.Attach="True" 
                             attached:PasswordHelper.Password="{Binding OldPassword, Mode=TwoWay}"/>

        <TextBlock Grid.Row="2" Grid.Column="0" Margin="20,5,5,5" Text="{x:Static Shared:UIText.NEW_PASSOWRD_LABEL_TEXT}"/>
        <PasswordBox Grid.Row="2" Grid.Column="1" Width="200" Margin="2" attached:PasswordHelper.Attach="True" 
                             attached:PasswordHelper.Password="{Binding NewPassword, Mode=TwoWay}"/>

        <TextBlock Grid.Row="3" Grid.Column="0" Margin="20,5,5,5" Text="{x:Static Shared:UIText.REENTER_NEW_PASSOWRD_LABEL_TEXT}"/>
        <PasswordBox x:Name="pwbReenter" Grid.Row="3" Grid.Column="1" Validation.ErrorTemplate="{x:Null}" Width="200" Margin="2" attached:PasswordHelper.Attach="True" 
                             attached:PasswordHelper.Password="{Binding ReenterNewPassword, Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
        <ContentPresenter Grid.Row="4" Grid.Column="1" Width="200" Content="{Binding ElementName=pwbReenter,Path=(Validation.Errors).CurrentItem}" />

        <Button Content="Save" Grid.Row="5" Grid.Column="1" Margin="2" HorizontalAlignment="Right" MinWidth="50" Command="{Binding ChangePasswordCommand}"/>

        <TextBlock Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" FontSize="18" Text="{x:Static Shared:UIText.APPEARANCE_SECTION}"/>

        <TextBlock Grid.Row="7" Grid.Column="0" Margin="20,5,5,5" Text="{x:Static Shared:UIText.THEME_SELECT_LABEL_TEXT}"/>
        <ComboBox Grid.Row="7" Grid.Column="1" Margin="2" SelectedItem="{Binding SelectedTheme}"
                  ItemsSource="{Binding ThemeColorlist}" ItemContainerStyle="{StaticResource ThemeColorComboItemStyle}"/>

        <TextBlock Grid.Row="8" Grid.Column="0" Margin="20,5,5,5" Text="{x:Static Shared:UIText.ACCENT_SELECT_LABEL_TEXT}"/>
        <ComboBox Grid.Row="8" Grid.Column="1" Margin="2" SelectedItem="{Binding SelectedAccent}"
                  ItemsSource="{Binding AccentColorlist}" ItemContainerStyle="{StaticResource AccentColorComboItemStyle}" />

    </apex:ApexGrid>
</UserControl>
